Usage overview:
  1. Create CAD model of system to be simulated.
  2. Convert CAD model files to GDML.
  3. Run application for this system.
  (See tutorial section below for examples.)

UI commands:
1) Set UCN initial KE in neV, e.g. "/gun/gunEnergy_neV 10".
1) Set UCN initial position in mm, e.g. "/gun/gunPosition 100.0 230.0 10.0 mm".

dev:
1) "Alive time": (Currently commented out.)
  Calculate time that UCN was in simulation. In UCNTrackingAction, get time of
  "birth" in PreUserTrackingAction. Get time of "death" in
  PostUserTrackingAction. Output difference in seconds to a file.

2) Y-position binning at given time: (Currently commented out.)
  Generate histogram of y-positions of UCNs at given time within some time
  window. In UCNSteppingAction, under UserSteppingAction put in time of interest
  and time window. Then along each step, check to see what time it is, and if it
  is the time of interest (within the desire time window), get the position and
  fill the histogram. Geant4 propagates UCNs along steps of some maximum length,
  so make sure that the step size is small enough in (under maxStep in
  UCNDetectorConstruction Construct method). To avoid counting the UCN more than
  once, there is a boolean flag in UCNEventAction (fHaveBinnedIt). At the
  beginning of each event, this is set to false. Once the UCN has been binned,
  it is set to true. Then at the end of the event it is reset to false. The
  histogram is initialized in UCNRunAction BeginOfRunAction and written to and
  closed in EndOfRunAction.

================================= Tutorial =====================================

Basic example:
$ git clone https://github.com/tneulinger/UCN
$ cd UCN
$ mkdir build
$ cd build
$ cmake ../
$ make
$ ./UCN ../models/example1/example1.gdml

User geometry:
  1. Save CAD model files of system as ".STL" of type ASCII. File names should
     include the desired material. For example "MyGizmo_Nickel.STL". See materials/
     directory for list of implemented materials and names.
  2. Convert STL files to GDML files. For example, in models/ directory...
    a. $ mkdir mySimulation
    b. $ cd mySimulation
    c. $ cp all/your/STL/files ./
    d. $ python ../stl_gdml.py mySimulation ./*.STL
    This will produce a mySimulation.gdml file in addition to .gdml files for all
    your model parts.
  3. Run the application. In build/ directory...
    a. ./UCN ../models/mySimulation/mySimulation.gdml
